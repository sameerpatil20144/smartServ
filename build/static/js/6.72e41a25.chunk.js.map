{"version":3,"sources":["services/index.js","constant.js","helpers/textValidator.js","helpers/index.js","../node_modules/react-bootstrap/esm/Row.js","components/login/index.js","helpers/customHook.js","components/alert/index.js"],"names":["BASE_URL","postRequest","apiName","data","a","async","url","getCookie","token","headers","os","axios","post","result","response","status","removeCookie","window","location","href","responseData","generateErrMsg","Error","message","putRequest","put","getRequest","params","get","deleteRequest","delete","error","msg","statusCode","LOGIN_API","TEST_NOTES","DropdownIndicator","props","selectProps","dropdownIcon","TextValidator","this","select2","errorMessages","validatorListener","flatpickr","defaultdate","parentClass","id","inputmask","selectedOption","rest","selectClass","as","tableError","errorText","className","label","Form","Label","htmlFor","style","marginTop","getOptionLabel","option","name","getOptionValue","isClearable","components","IndicatorSeparator","onChange","value","target","extra","ref","r","input","options","dateFormat","dateformat","defaultDate","enableTime","enabletime","noCalendar","nocalendar","minDate","mindate","maxDate","maxdate","time_24hr","placeholder","date","mask","Control","postFix","type","state","isValid","color","getErrorMessage","ValidatorComponent","Row","React","forwardRef","bsPrefix","noGutters","_props$as","Component","otherProps","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","createElement","_extends","classNames","defaultProps","Login","useState","setError","useForm","inputs","user_auth","setCookie","history","push","handleInputChange","handleSubmit","variant","onSubmit","Group","email","validators","password","initialValues","callback","setInputs","event","preventDefault","typeOfInput","persist","avoidAlphabets","text","replace","avoidHtmlTags","resetState","clearState","AlertMsg"],"mappings":"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","file":"static/js/6.72e41a25.chunk.js","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable */\n/* eslint-disable no-console */\nimport axios from 'axios';\nimport { getCookie, removeCookie } from '../cookies';\nconst BASE_URL = \"https://staging-emr.mecure.com/api/\"\n\nexport const postRequest = async (apiName, data) => {\n    const url = BASE_URL + apiName;\n    const token = await getCookie('access_token');\n    const headers = {};\n    headers.os = \"web\";\n\n    if (token) {\n        headers.token = token\n    }\n\n    try {\n        const result = await axios.post(url, data, { headers: headers });\n        return result.data\n    } catch (error) {\n        const { response } = error\n        if (response) {\n            const { status } = response\n            if (status === 401) {\n                removeCookie('access_token')\n                removeCookie('name');\n                window.location.href = \"/\"\n            }\n        }\n        const responseData = generateErrMsg(error)\n        throw new Error((responseData.message));\n    }\n}\n\nexport const putRequest = async (apiName, data) => {\n    const url = BASE_URL + apiName;\n    const token = await getCookie('access_token');\n    const headers = {};\n    headers.os = \"web\";\n    if (token) {\n        headers.token = token\n    }\n\n    try {\n        const result = await axios.put(url, data, { headers: headers });\n        return result.data\n    } catch (error) {\n        const { response } = error\n        if (response) {\n            const { status } = response\n            if (status === 401) {\n                removeCookie('access_token')\n                removeCookie('name');\n                window.location.href = \"/\"\n            }\n        }\n        const responseData = generateErrMsg(error)\n        throw new Error((responseData.message));\n    }\n}\n\nexport const getRequest = async (apiName, params = '') => {\n    const url = BASE_URL + apiName;\n    const token = await getCookie('access_token');\n    let headers = {};\n    headers.os = \"web\";\n    if (token) {\n        headers.token = token\n    }\n    try {\n        const result = await axios.get(url, { params: params, headers: headers });\n        return result.data\n    } catch (error) {\n        const { response } = error\n        if (response) {\n            const { status } = response\n            if (status === 401) {\n                removeCookie('access_token')\n                removeCookie('name');\n                window.location.href = \"/\"\n            }\n        }\n        const responseData = generateErrMsg(error)\n        throw new Error((responseData.message));\n    }\n}\n\nexport const deleteRequest = async (apiName, data) => {\n    const url = BASE_URL + apiName;\n    const token = await getCookie('access_token');\n    const headers = {};\n    headers.os = \"web\";\n    if (token) {\n        headers.token = token\n    }\n\n    try {\n        const result = await axios.delete(url, { data: data, headers: headers });\n        return result.data\n    } catch (error) {\n        const { response } = error\n        if (response) {\n            const { status } = response\n            if (status === 401) {\n                removeCookie('access_token')\n                removeCookie('name');\n                window.location.href = \"/\"\n            }\n\n        }\n        const responseData = generateErrMsg(error)\n        throw new Error((responseData.message));\n    }\n}\n\nconst generateErrMsg = (error) => {\n\n    const { response } = error\n\n    if (response) {\n        const { data } = response;\n        if (data) {\n            const { msg, status, statusCode } = data\n            const returnMsg = {\n                statusCode: statusCode ? statusCode : 400,\n                message: msg ? msg : \"Something Went Wrong ! Please Try again later\"\n            }\n\n            return returnMsg\n        }\n    } else {\n        const returnMsg = {\n            message: \"Something Went Wrong ! Please Try again later\"\n        }\n        return returnMsg;\n    }\n\n}","//for-login\nexport const LOGIN_API = \"EMR_userLogin\";\n//for-notes\nexport const TEST_NOTES = \"note\";\n\n\n\n\n\n\n","/* eslint-disable no-undef */\n/* eslint-disable */\n/* eslint-disable no-console */\nimport React, { type ElementConfig } from 'react';\nimport { ValidatorComponent } from 'react-form-validator-core';\nimport {\n    Form\n} from 'react-bootstrap';\nimport Select, { components } from 'react-select';\nimport 'flatpickr/dist/themes/material_blue.css'\nimport Flatpickr from 'react-flatpickr'\nimport InputMask from \"react-input-mask\";\n\nconst DropdownIndicator = (\n    props: ElementConfig<typeof components.DropdownIndicator>\n) => {\n    return (\n        <components.DropdownIndicator {...props}>\n            {props.selectProps.dropdownIcon}\n        </components.DropdownIndicator>\n    );\n};\n\n\nclass TextValidator extends ValidatorComponent {\n\n    render() {\n        const { errorMessages, validatorListener, select2, flatpickr, defaultdate, parentClass = '', id, dropdownIcon, inputmask, selectedOption, ...rest } = this.props;\n\n        const selectClass = this.props.as == 'select' ? ' type-select ' : '';\n\n        const tableError = this.errorText() !== null ? ' table-error' : '';\n\n        return (\n            <div className={selectClass + parentClass + tableError} >\n                {this.props.label && (\n                    <Form.Label htmlFor={id && id} style={{ marginTop: '15px' }}>{this.props.label}</Form.Label>\n                )}\n\n                {select2 ?\n\n                    <Select\n                        getOptionLabel={option => option.name}\n                        getOptionValue={option => option.id}\n                        isClearable={true}\n                        dropdownIcon={dropdownIcon || <i className=\"fas fa-caret-down\"></i>}\n                        components={{\n                            DropdownIndicator,\n                            IndicatorSeparator: () => null\n                        }}\n                        {...rest}\n                        onChange={\n                            (value) => {\n                                if (value) {\n                                    this.props.onChange({ target: { name: this.props.name, value: value.id, extra: value } })\n                                } else {\n                                    this.props.onChange({ target: { name: this.props.name, id: '' , extra: null } })\n                                }\n                            }\n                        }\n                        ref={(r) => { this.input = r; }}\n                    />\n                    : flatpickr ?\n                        <Flatpickr\n                            className=\"form-control mt-1\"\n                            value={selectedOption}\n                            options={{\n                                dateFormat: this.props.dateformat || \"d-m-Y\",\n                                defaultDate: defaultdate,\n                                enableTime: this.props.enabletime,\n                                noCalendar: this.props.nocalendar,\n                                minDate: this.props.mindate,\n                                maxDate: this.props.maxdate,\n                                time_24hr: true\n                            }}\n                            placeholder=\"dd-mm-yyyy\"\n                            {...rest}\n                            onChange={\n                                (date) =>\n                                    date &&\n                                    this.props.onChange({ target: { name: this.props.name, value: date } })\n                            }\n                            ref={(r) => { this.input = r; }}\n                        />\n                        : inputmask ?\n                            <InputMask\n                                className=\"form-control\"\n                                mask=\"99-99-9999\"\n                                {...rest}\n                                ref={(r) => { this.input = r; }}\n                            />\n                            :\n                            <Form.Control {...rest}\n                                id={id}\n                                ref={(r) => { this.input = r; }} />\n                }\n\n                <span>{this.props.postFix}</span>\n\n                {this.props.type === \"file\" &&\n                    (\n                        <label className=\"custom-file-label\" htmlFor={id}>\n                            {this.props.value || 'Upload Attachment'}\n                        </label>\n                    )\n                }\n\n                <div className=\"error-text\">{this.errorText()}</div>\n            </div>\n        );\n    }\n\n    errorText() {\n        const { isValid } = this.state;\n\n        if (isValid) {\n            return null;\n        }\n\n        return (\n            <div style={{ color: 'red' }}>\n                {this.getErrorMessage()}\n            </div>\n        );\n    }\n}\n\nexport default TextValidator;","\nexport { default as customHooks } from './customHook';\nexport { default as requestWrapper } from './requestWrapper';\nexport { default as constants } from './constants';\nexport { default as TextValidator } from './textValidator';\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      noGutters = props.noGutters,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, otherProps, {\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters')\n  }));\n});\nRow.defaultProps = defaultProps;\nexport default Row;","// export default Login;\n/* eslint-disable no-undef */\n/* eslint-disable */\n/* eslint-disable no-console */\nimport React, { useState } from \"react\";\nimport { ValidatorForm } from 'react-form-validator-core';\nimport { TextValidator } from '../../helpers';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { postRequest, getRequest } from '../../services'\nimport useForm from '../../helpers/customHook';\nimport { LOGIN_API, EMR_USER_RIGHTS } from '../../constant'\nimport AlertMsg from '../alert'\nimport { setCookie } from '../../cookies'\n\nconst Login = (props) => {\n    const [error, setError] = useState();\n    const initialState = {\n        \"email\": '',\n        \"password\": ''\n    };\n\n    const signup = async () => {\n        setError();\n        try {\n            const result = await postRequest(LOGIN_API, inputs);\n            const { status, msg, data } = result;\n            if (status) {\n                const { name, user_auth } = data[0];\n                setCookie('access_token', user_auth);\n                setCookie('name', name);\n                props.history.push(\"/dashboard\")\n            } else {\n                setError(msg);\n            }\n        } catch (e) {\n            setError('Something went wrong!! Please try again later');\n        }\n    }\n\n    const { inputs, handleInputChange, handleSubmit } = useForm(initialState, signup);\n\n    return (\n\n        <div className=\"login-wrap\">\n            <div className='container'>\n                <Row>\n                    <Col className=\"p-0 mt-5\">\n                        <div className=\"form-wrap\">\n                            {\n                                error &&\n                                <AlertMsg variant=\"danger\" msg={error} />\n                            }\n                            <h4 className=\"text-primary font-weight-bold mb-4\">Log In to SmartServ To-do List</h4>\n                            <ValidatorForm onSubmit={handleSubmit}>\n                                <Form.Group>\n                                    <TextValidator\n                                        placeholder=\"Email\"\n                                        onChange={handleInputChange}\n                                        name=\"email\"\n                                        value={inputs.email}\n                                        type=\"email\"\n                                        validators={['required']}\n                                        errorMessages={['This field is required']}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <TextValidator\n                                        placeholder=\"Password\"\n                                        onChange={handleInputChange}\n                                        name=\"password\"\n                                        type=\"password\"\n                                        parentClass=\"password\"\n                                        value={inputs.password}\n                                        validators={['required']}\n                                        errorMessages={['Password is not valid']}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Button variant=\"primary\" className=\"w-100 m-0 ft-18 py-2\" type=\"submit\">Log In</Button>\n                                </Form.Group>\n                            </ValidatorForm>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","/* eslint-disable no-undef */\n/* eslint-disable */\n/* eslint-disable no-console */\nimport { useState } from 'react';\n\nconst useForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n  const handleSubmit = async (event) => {\n    if (event) event.preventDefault();\n    callback();\n  }\n\n\n\n  const handleInputChange = (event, typeOfInput) => {\n\n    if (typeof event.persist === \"function\") {\n      event.persist();\n    }\n    if (typeOfInput === \"isNumber\") {\n      const regex = /^[a-zA-Z!”$%&’()*\\+,\\/;\\[\\\\\\]\\^_`\"{|}^~'{}<>:?/,-]+$/;\n      var text = event.target.value\n      var avoidAlphabets = text.replace(regex, \"\")\n      setInputs(inputs => ({ ...inputs, [event.target.name]: avoidAlphabets }));\n    }\n    else if (typeOfInput === \"notEqualToZero\") {\n      var text = event.target.value\n      if (text === \"00\" || text === \"0\") {\n        var avoidHtmlTags = text.replace(\"\")\n        setInputs(inputs => ({ ...inputs, [event.target.name]: '' }));\n      }\n      else if (text === \"-\") {\n        var avoidHtmlTags = text.replace(\"\")\n        setInputs(inputs => ({ ...inputs, [event.target.name]: '' }));\n      }\n      else {\n        setInputs(inputs => ({ ...inputs, [event.target.name]: event.target.value }));\n      }\n    }\n    else if (typeOfInput === \"inputTextArea\") {\n      var regex = /(<([^>]+)>)/ig;\n      var text = event.target.value\n      var avoidHtmlTags = text.replace(regex, \"\")\n      setInputs(inputs => ({ ...inputs, [event.target.name]: avoidHtmlTags }));\n    } else if (event.target.extra) {\n      setInputs(inputs => ({ ...inputs, [event.target.name]: { name: event.target.extra.name, id: event.target.value } }));\n    }\n    else {\n      setInputs(inputs => ({ ...inputs, [event.target.name]: event.target.value }));\n    }\n  }\n\n  //common function for clearing states.\n  const resetState = (clearState) => {\n    setInputs(inputs => ({\n      ...inputs,\n      ...clearState\n    }))\n  }\n\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs,\n    setInputs,\n    resetState\n  };\n}\nexport default useForm;","/* eslint-disable no-undef */\n/* eslint-disable */\n/* eslint-disable no-console */\nimport React, { useState } from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst AlertMsg = ({ variant, msg }) => {\n    return (\n        <Alert variant={variant}>\n            {msg}\n        </Alert>\n    )\n}\n\nexport default AlertMsg;"],"sourceRoot":""}